// Note that this is a sample configuration for a Debezium connector for PostgreSQL.
{
      "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
      "database.hostname": "<db-hostname>",
      "database.port": "5432",
      "database.user": "<username>",
      "database.password": "<password>",
      "database.dbname": "<database-name>",
      "database.server.name": "postgres",
      "plugin.name": "pgoutput",
      "table.include.list": "<table-list>", 
      "database.history.kafka.bootstrap.servers": "<kafka-server-url>",
      "database.history.kafka.topic": "schema-changes.postgres",
      "transforms": "unwrap",
      "topic.prefix": "<prfix-for-kafka-topics>",
      "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
      "publication.name": "dbz_publication",
      "slot.name": "dbz",
      "slot.drop.on.stop": false,
      "schema.include.list": "public",
      "publication.autocreate.mode": "disabled",
      "tombstones.on.delete": true,
      "provide.transaction.metadata": true,
      "binary.handling.mode": "base64",
      "snapshot.mode": "initial",
      "incremental.snapshot.enabled": "true",
      "snapshot.locking.mode": "shared",
      "producer.compression.type": "lz4",
      "key.converter": "io.confluent.connect.avro.AvroConverter",
      "value.converter": "io.confluent.connect.avro.AvroConverter",
      "key.converter.schema.registry.url": "http://cp-schema-registry",
      "value.converter.schema.registry.url": "http://cp-schema-registry",
      "key.converter.schemas.enable": "true",
      "value.converter.schemas.enable": "true",
      "topic.creation.default.replication.factor": 3,
      "topic.creation.default.partitions": 1,
      "topic.creation.default.cleanup.policy": "compact",
      "topic.creation.default.compression.type": "lz4",
      "skipped.operations": "none"
}