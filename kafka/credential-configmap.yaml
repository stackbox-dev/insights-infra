apiVersion: batch/v1
kind: CronJob
metadata:
  name: kafka-configmap-creator
  namespace: kafka
spec:
  schedule: "0 * * * *" 
  jobTemplate:
    spec:
      template:
        spec:
          nodeSelector:
            instance_type: kafka-genral
          tolerations:
            - key: "instance_type"
              operator: "Equal"
              value: "kafka-genral"
              effect: "NoSchedule"
          serviceAccountName: kafka-sa
          containers:
          - name: update-token
            image: gcr.io/google.com/cloudsdktool/google-cloud-cli:470.0.0-alpine
            command: ["/bin/sh", "-c"]
            args:
              - |
                apk add --no-cache curl jq && \
                curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
                chmod +x kubectl && mv kubectl /usr/local/bin/ && \
                TOKEN=$(gcloud auth print-access-token | base64 -w 0) && \
                ENCODED_TOKEN=$(echo -n $TOKEN | base64 -d) && \
                kubectl create configmap token-config --from-literal=token=$ENCODED_TOKEN --dry-run=client -n kafka -o yaml | kubectl apply -f -
          restartPolicy: OnFailure
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kafka
  name: kafka-configmap-creator-role
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create", "update", "patch", "get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kafka-configmap-creator-binding
  namespace: kafka
subjects:
- kind: ServiceAccount
  name: kafka-sa
  namespace: kafka
roleRef:
  kind: Role
  name: kafka-configmap-creator-role
  apiGroup: rbac.authorization.k8s.io