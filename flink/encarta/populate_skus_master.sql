-- Optimized INSERT statement using materialized aggregation tables
-- Uses regular LEFT JOINs for real-time latest data processing
-- Source 'skus' table has proper PRIMARY KEY (id) NOT ENFORCED with changelog.mode = 'upsert'
INSERT INTO `sbx-uat.encarta.public.skus_master`
SELECT s.id,
    -- Primary key from source matches target primary key
    s.principal_id,
    s.principal_id AS node_id,
    cat.code AS category,
    p.code AS product,
    cg.code AS category_group,
    sb.code AS sub_brand,
    b.code AS brand,
    s.code,
    s.name,
    s.short_description,
    s.description,
    s.fulfillment_type,
    s.avg_l0_per_put,
    s.inventory_type,
    s.shelf_life,
    s.identifier1,
    s.identifier2,
    s.tag1,
    s.tag2,
    s.tag3,
    s.tag4,
    s.tag5,
    s.tag6,
    s.tag7,
    s.tag8,
    s.tag9,
    s.handling_unit_type,
    s.cases_per_layer,
    s.layers,
    s.active_from,
    s.active_till,
    COALESCE(uom_agg.l0_units, 0) AS l0_units,
    COALESCE(uom_agg.l1_units, 0) AS l1_units,
    COALESCE(uom_agg.l2_units, 0) AS l2_units,
    COALESCE(uom_agg.l2_units, 0) AS l2_units_final,
    COALESCE(uom_agg.l3_units, 0) AS l3_units,
    COALESCE(uom_agg.l3_units, 0) AS l3_units_final,
    uom_agg.l0_name,
    uom_agg.l0_weight,
    uom_agg.l0_volume,
    uom_agg.l0_package_type,
    uom_agg.l0_length,
    uom_agg.l0_width,
    uom_agg.l0_height,
    uom_agg.l0_packing_efficiency,
    uom_agg.l0_itf_code,
    uom_agg.l0_erp_weight,
    uom_agg.l0_erp_volume,
    uom_agg.l0_erp_length,
    uom_agg.l0_erp_width,
    uom_agg.l0_erp_height,
    uom_agg.l0_text_tag1,
    uom_agg.l0_text_tag2,
    uom_agg.l0_image,
    uom_agg.l0_num_tag1,
    uom_agg.l1_name,
    uom_agg.l1_weight,
    uom_agg.l1_volume,
    uom_agg.l1_package_type,
    uom_agg.l1_length,
    uom_agg.l1_width,
    uom_agg.l1_height,
    uom_agg.l1_packing_efficiency,
    uom_agg.l1_itf_code,
    uom_agg.l1_erp_weight,
    uom_agg.l1_erp_volume,
    uom_agg.l1_erp_length,
    uom_agg.l1_erp_width,
    uom_agg.l1_erp_height,
    uom_agg.l1_text_tag1,
    uom_agg.l1_text_tag2,
    uom_agg.l1_image,
    uom_agg.l1_num_tag1,
    uom_agg.l2_name,
    uom_agg.l2_weight,
    uom_agg.l2_volume,
    uom_agg.l2_package_type,
    uom_agg.l2_length,
    uom_agg.l2_width,
    uom_agg.l2_height,
    uom_agg.l2_packing_efficiency,
    uom_agg.l2_itf_code,
    uom_agg.l2_erp_weight,
    uom_agg.l2_erp_volume,
    uom_agg.l2_erp_length,
    uom_agg.l2_erp_width,
    uom_agg.l2_erp_height,
    uom_agg.l2_text_tag1,
    uom_agg.l2_text_tag2,
    uom_agg.l2_image,
    uom_agg.l2_num_tag1,
    uom_agg.l3_name,
    uom_agg.l3_weight,
    uom_agg.l3_volume,
    uom_agg.l3_package_type,
    uom_agg.l3_length,
    uom_agg.l3_width,
    uom_agg.l3_height,
    uom_agg.l3_packing_efficiency,
    uom_agg.l3_itf_code,
    uom_agg.l3_erp_weight,
    uom_agg.l3_erp_volume,
    uom_agg.l3_erp_length,
    uom_agg.l3_erp_width,
    uom_agg.l3_erp_height,
    uom_agg.l3_text_tag1,
    uom_agg.l3_text_tag2,
    uom_agg.l3_image,
    uom_agg.l3_num_tag1,
    COALESCE(s.active, FALSE) AS active,
    COALESCE(class_agg.classifications, '{}') AS classifications,
    COALESCE(prod_class_agg.product_classifications, '{}') AS product_classifications,
    COALESCE(s.is_deleted, FALSE) AS is_deleted,
    s.created_at,
    s.updated_at
FROM `sbx-uat.encarta.public.skus` s
    LEFT JOIN `sbx-uat.encarta.public.skus_uoms_agg` AS uom_agg ON s.id = uom_agg.sku_id
    LEFT JOIN `sbx-uat.encarta.public.skus_classifications_agg` AS class_agg ON s.id = class_agg.sku_id
    LEFT JOIN `sbx-uat.encarta.public.products_classifications_agg` AS prod_class_agg ON s.product_id = prod_class_agg.product_id
    LEFT JOIN `sbx-uat.encarta.public.products` AS p ON s.product_id = p.id
    LEFT JOIN `sbx-uat.encarta.public.sub_categories` AS subcat ON p.sub_category_id = subcat.id
    LEFT JOIN `sbx-uat.encarta.public.categories` AS cat ON subcat.category_id = cat.id
    LEFT JOIN `sbx-uat.encarta.public.category_groups` AS cg ON cat.category_group_id = cg.id
    LEFT JOIN `sbx-uat.encarta.public.sub_brands` AS sb ON p.sub_brand_id = sb.id
    LEFT JOIN `sbx-uat.encarta.public.brands` AS b ON sb.brand_id = b.id;