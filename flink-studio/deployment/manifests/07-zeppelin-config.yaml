apiVersion: v1
kind: ConfigMap
metadata:
  name: zeppelin-config
  namespace: flink-studio
  labels:
    app.kubernetes.io/name: zeppelin
    app.kubernetes.io/component: config
data:
  zeppelin-site.xml: |
    <?xml version="1.0"?>
    <configuration>
      <property>
        <name>zeppelin.server.addr</name>
        <value>0.0.0.0</value>
      </property>
      <property>
        <name>zeppelin.server.port</name>
        <value>8080</value>
      </property>
      <property>
        <name>zeppelin.notebook.dir</name>
        <value>/opt/zeppelin/notebook</value>
      </property>
      <property>
        <name>zeppelin.interpreter.dir</name>
        <value>/opt/zeppelin/interpreter</value>
      </property>
      <property>
        <name>zeppelin.interpreter.localRepo</name>
        <value>/opt/zeppelin/local-repo</value>
      </property>
      <property>
        <name>zeppelin.anonymous.allowed</name>
        <value>true</value>
      </property>
      <property>
        <name>zeppelin.notebook.public</name>
        <value>true</value>
      </property>
      <property>
        <name>zeppelin.websocket.max.text.message.size</name>
        <value>1024000</value>
      </property>
      <property>
        <name>zeppelin.server.default.dir.allowed</name>
        <value>true</value>
      </property>
      <property>
        <name>zeppelin.interpreter.connect.timeout</name>
        <value>60000</value>
      </property>
      <property>
        <name>zeppelin.interpreter.output.limit</name>
        <value>102400</value>
      </property>
    </configuration>
  interpreter.json: |
    {
      "interpreterSettings": {
        "flink": {
          "id": "flink",
          "name": "flink", 
          "group": "flink",
          "properties": {
            "FLINK_HOME": {
              "name": "FLINK_HOME",
              "value": "/opt/flink",
              "type": "string"
            },
            "flink.execution.mode": {
              "name": "flink.execution.mode",
              "value": "remote",
              "type": "string"
            },
            "flink.execution.remote.host": {
              "name": "flink.execution.remote.host", 
              "value": "flink-session-cluster",
              "type": "string"
            },
            "flink.execution.remote.port": {
              "name": "flink.execution.remote.port",
              "value": "80",
              "type": "number"
            },
            "zeppelin.flink.uiWebUrl": {
              "name": "zeppelin.flink.uiWebUrl", 
              "value": "http://flink-session-cluster:80",
              "type": "string"
            },
            "zeppelin.flink.maxResult": {
              "name": "zeppelin.flink.maxResult",
              "value": "1000",
              "type": "number"
            },
            "table.exec.resource.default-parallelism": {
              "name": "table.exec.resource.default-parallelism",
              "value": "1",
              "type": "string"
            },
            "zeppelin.flink.concurrentStreamSql.max": {
              "name": "zeppelin.flink.concurrentStreamSql.max",
              "value": "10",
              "type": "number"
            },
            "zeppelin.flink.concurrentBatchSql.max": {
              "name": "zeppelin.flink.concurrentBatchSql.max",
              "value": "10",
              "type": "number"
            },
            "zeppelin.flink.scala.color": {
              "name": "zeppelin.flink.scala.color",
              "value": "true",
              "type": "string"
            },
            "zeppelin.flink.scala.shell.tmpdir": {
              "name": "zeppelin.flink.scala.shell.tmpdir",
              "value": "/tmp/zeppelin-flink",
              "type": "string"
            }
          },
          "status": "READY",
          "interpreterGroup": [
            {
              "name": "ssql",
              "class": "org.apache.zeppelin.flink.FlinkStreamSqlInterpreter",
              "defaultInterpreter": true,
              "editor": {
                "language": "sql",
                "editOnDblClick": false
              }
            },
            {
              "name": "bsql",
              "class": "org.apache.zeppelin.flink.FlinkBatchSqlInterpreter",
              "defaultInterpreter": false,
              "editor": {
                "language": "sql",
                "editOnDblClick": false
              }
            }
          ],
          "dependencies": [],
          "option": {
            "remote": true,
            "port": -1,
            "isExistingProcess": false,
            "setPermission": false,
            "owners": [],
            "isUserImpersonate": false
          }
        }
      },
      "interpreterBindings": {},
      "interpreterRepositories": [
        {
          "id": "central",
          "type": "default",
          "url": "https://repo1.maven.org/maven2/",
          "releasePolicy": {
            "enabled": true,
            "updatePolicy": "daily",
            "checksumPolicy": "warn"
          },
          "snapshotPolicy": {
            "enabled": true,
            "updatePolicy": "daily",
            "checksumPolicy": "warn"
          }
        }
      ]
    }
  configure-interpreter.sh: |
    #!/bin/sh
    echo "Configuring Flink interpreter for remote cluster connection..."
    
    # Wait for Zeppelin to start
    sleep 30
    
    # Ensure the configuration directory exists
    mkdir -p /opt/zeppelin/conf
    
    echo "Interpreter configuration is ready from ConfigMap"
    
    # Test connectivity to Flink Session cluster (using wget since curl is not available in busybox)
    echo "Testing connection to Flink Session cluster..."
    for i in $(seq 1 15); do
        if wget -q -O /dev/null http://flink-session-cluster:80/ 2>/dev/null; then
            echo "Successfully connected to Flink Session cluster"
            break
        fi
        echo "Waiting for Flink Session cluster..."
        sleep 2
    done
    
    # Verify Flink home is available
    if [ -d "/opt/flink" ]; then
        echo "FLINK_HOME is available at /opt/flink"
        ls -la /opt/flink/
    else
        echo "Warning: FLINK_HOME not found at /opt/flink"
    fi
    
    echo "Flink interpreter configured successfully"
