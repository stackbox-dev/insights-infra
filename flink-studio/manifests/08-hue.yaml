apiVersion: apps/v1
kind: Deployment
metadata:
  name: hue
  namespace: flink-studio
  labels:
    app.kubernetes.io/name: hue
    app.kubernetes.io/component: web-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hue
      app.kubernetes.io/component: web-ui
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hue
        app.kubernetes.io/component: web-ui
    spec:
      containers:
        - name: hue
          image: gethue/hue:4.11.0
          ports:
            - containerPort: 8888
              name: http
          env:
            - name: HUE_CONF_DIR
              value: "/etc/hue/conf"
          volumeMounts:
            - name: hue-config
              mountPath: /etc/hue/conf
              readOnly: true
            - name: hue-data
              mountPath: /usr/share/hue/data
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
          livenessProbe:
            httpGet:
              path: /
              port: 8888
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8888
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        - name: hue-config
          configMap:
            name: hue-config
        - name: hue-data
          persistentVolumeClaim:
            claimName: hue-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: hue
  namespace: flink-studio
  labels:
    app.kubernetes.io/name: hue
    app.kubernetes.io/component: web-ui
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8888
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: hue
    app.kubernetes.io/component: web-ui
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: hue-ingress
#   namespace: flink-studio
#   labels:
#     app.kubernetes.io/name: hue
#     app.kubernetes.io/component: ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     cert-manager.io/cluster-issuer: "letsencrypt-prod"
# spec:
#   ingressClassName: nginx
#   tls:
#   - hosts:
#     - hue.flink-studio.local
#     secretName: hue-tls
#   rules:
#   - host: hue.flink-studio.local
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: hue
#             port:
#               number: 8888
