-- View for getting inventory position at any arbitrary timestamp
-- Combines hourly snapshots with incremental events for point-in-time accuracy

-- View to calculate cumulative quantities from hourly snapshots
CREATE VIEW IF NOT EXISTS wms_inventory_position_cumulative AS
SELECT
    hour_window,
    wh_id,
    hu_code,
    sku_code,
    uom,
    bucket,
    batch,
    price,
    inclusion_status,
    locked_by_task_id,
    lock_mode,
    -- Calculate cumulative quantity using window function
    sum(hourly_qty_change) OVER (
        PARTITION BY 
            wh_id,
            hu_code,
            sku_code,
            uom,
            bucket,
            batch,
            price,
            inclusion_status,
            locked_by_task_id,
            lock_mode
        ORDER BY hour_window
        ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
    ) as cumulative_qty,
    hourly_qty_change,
    event_count,
    -- All other fields from hourly snapshot
    latest_hu_event_id,
    latest_quant_event_id,
    first_event_time,
    last_event_time,
    hu_event_seq,
    hu_id,
    hu_event_type,
    hu_event_payload,
    hu_event_attrs,
    session_id,
    task_id,
    correlation_id,
    storage_id,
    outer_hu_id,
    effective_storage_id,
    sku_id,
    hu_kind_id,
    hu_state,
    hu_attrs,
    hu_created_at,
    hu_updated_at,
    hu_lock_task_id,
    hu_effective_storage_id,
    hu_kind_code,
    hu_kind_name,
    hu_kind_attrs,
    hu_kind_active,
    hu_kind_max_volume,
    hu_kind_max_weight,
    hu_kind_usage_type,
    hu_kind_abbr,
    hu_kind_length,
    hu_kind_breadth,
    hu_kind_height,
    hu_kind_weight,
    storage_bin_code,
    storage_bin_description,
    storage_bin_status,
    storage_bin_hu_id,
    storage_multi_sku,
    storage_multi_batch,
    storage_picking_position,
    storage_putaway_position,
    storage_rank,
    storage_aisle,
    storage_bay,
    storage_level,
    storage_position,
    storage_depth,
    storage_max_sku_count,
    storage_max_sku_batch_count,
    storage_bin_type_id,
    storage_bin_type_code,
    storage_bin_type_description,
    storage_max_volume_in_cc,
    storage_max_weight_in_kg,
    storage_pallet_capacity,
    storage_hu_type,
    storage_auxiliary_bin,
    storage_hu_multi_sku,
    storage_hu_multi_batch,
    storage_use_derived_pallet_best_fit,
    storage_only_full_pallet,
    storage_bin_type_active,
    storage_zone_id,
    storage_zone_code,
    storage_zone_description,
    storage_zone_face,
    storage_peripheral,
    storage_surveillance_config,
    storage_zone_active,
    storage_area_id,
    storage_area_code,
    storage_area_description,
    storage_area_type,
    storage_rolling_days,
    storage_area_active,
    storage_x1,
    storage_x2,
    storage_y1,
    storage_y2,
    storage_position_active,
    storage_attrs,
    storage_bin_mapping,
    storage_created_at,
    storage_updated_at,
    sku_name,
    sku_short_description,
    sku_description,
    sku_category,
    sku_product,
    sku_product_id,
    sku_category_group,
    sku_sub_brand,
    sku_brand,
    sku_fulfillment_type,
    sku_inventory_type,
    sku_shelf_life,
    sku_handling_unit_type,
    sku_cases_per_layer,
    sku_layers,
    sku_active_from,
    sku_active_till,
    sku_l0_units,
    sku_l0_name,
    sku_l0_weight,
    sku_l0_volume,
    sku_l0_length,
    sku_l0_width,
    sku_l0_height,
    sku_l1_units,
    sku_l1_name,
    sku_l1_weight,
    sku_l1_volume,
    sku_l1_length,
    sku_l1_width,
    sku_l1_height,
    sku_active,
    sku_created_at,
    sku_updated_at,
    effective_storage_bin_code,
    effective_storage_bin_description,
    effective_storage_bin_status,
    effective_storage_bin_hu_id,
    effective_storage_multi_sku,
    effective_storage_multi_batch,
    effective_storage_picking_position,
    effective_storage_putaway_position,
    effective_storage_rank,
    effective_storage_aisle,
    effective_storage_bay,
    effective_storage_level,
    effective_storage_position,
    effective_storage_depth,
    effective_storage_max_sku_count,
    effective_storage_max_sku_batch_count,
    effective_storage_bin_type_id,
    effective_storage_bin_type_code,
    effective_storage_bin_type_description,
    effective_storage_max_volume_in_cc,
    effective_storage_max_weight_in_kg,
    effective_storage_pallet_capacity,
    effective_storage_hu_type,
    effective_storage_auxiliary_bin,
    effective_storage_hu_multi_sku,
    effective_storage_hu_multi_batch,
    effective_storage_use_derived_pallet_best_fit,
    effective_storage_only_full_pallet,
    effective_storage_bin_type_active,
    effective_storage_zone_id,
    effective_storage_zone_code,
    effective_storage_zone_description,
    effective_storage_zone_face,
    effective_storage_peripheral,
    effective_storage_surveillance_config,
    effective_storage_zone_active,
    effective_storage_area_id,
    effective_storage_area_code,
    effective_storage_area_description,
    effective_storage_area_type,
    effective_storage_rolling_days,
    effective_storage_area_active,
    effective_storage_x1,
    effective_storage_x2,
    effective_storage_y1,
    effective_storage_y2,
    effective_storage_position_active,
    effective_storage_attrs,
    effective_storage_bin_mapping,
    effective_storage_created_at,
    effective_storage_updated_at,
    outer_hu_code,
    outer_hu_kind_id,
    outer_hu_session_id,
    outer_hu_task_id,
    outer_hu_storage_id,
    outer_hu_outer_hu_id,
    outer_hu_state,
    outer_hu_attrs,
    outer_hu_created_at,
    outer_hu_updated_at,
    outer_hu_lock_task_id,
    outer_hu_effective_storage_id,
    outer_hu_kind_code,
    outer_hu_kind_name,
    outer_hu_kind_attrs,
    outer_hu_kind_active,
    outer_hu_kind_max_volume,
    outer_hu_kind_max_weight,
    outer_hu_kind_usage_type,
    outer_hu_kind_abbr,
    outer_hu_kind_length,
    outer_hu_kind_breadth,
    outer_hu_kind_height,
    outer_hu_kind_weight,
    _processed_at
FROM wms_inventory_hourly_position
ORDER BY
    wh_id,
    hour_window,
    hu_code,
    sku_code;

-- Function to get inventory position at a specific timestamp
-- Usage: SELECT * FROM wms_inventory_position_at(toDateTime64('2024-01-15 14:30:00', 3))
CREATE FUNCTION IF NOT EXISTS wms_inventory_position_at AS (target_time) ->
(
    WITH 
    -- Get the base hourly snapshot
    base_snapshot AS (
        SELECT *
        FROM wms_inventory_position_cumulative
        WHERE hour_window = toStartOfHour(target_time)
    ),
    -- Get events after the hour boundary up to target time
    incremental_events AS (
        SELECT 
            wh_id,
            hu_code,
            sku_code,
            uom,
            bucket,
            batch,
            price,
            inclusion_status,
            locked_by_task_id,
            lock_mode,
            sum(qty_added) as additional_qty,
            count() as additional_event_count,
            -- Get latest values for all fields using argMax
            argMax(hu_event_id, hu_event_timestamp) as latest_hu_event_id,
            argMax(quant_event_id, hu_event_timestamp) as latest_quant_event_id,
            max(hu_event_timestamp) as last_event_time,
            argMax(hu_event_seq, hu_event_timestamp) as hu_event_seq,
            argMax(hu_id, hu_event_timestamp) as hu_id,
            argMax(hu_event_type, hu_event_timestamp) as hu_event_type,
            argMax(hu_event_payload, hu_event_timestamp) as hu_event_payload,
            argMax(hu_event_attrs, hu_event_timestamp) as hu_event_attrs,
            argMax(session_id, hu_event_timestamp) as session_id,
            argMax(task_id, hu_event_timestamp) as task_id,
            argMax(correlation_id, hu_event_timestamp) as correlation_id,
            argMax(storage_id, hu_event_timestamp) as storage_id,
            argMax(outer_hu_id, hu_event_timestamp) as outer_hu_id,
            argMax(effective_storage_id, hu_event_timestamp) as effective_storage_id,
            argMax(sku_id, hu_event_timestamp) as sku_id,
            argMax(hu_kind_id, hu_event_timestamp) as hu_kind_id,
            argMax(hu_state, hu_event_timestamp) as hu_state,
            argMax(hu_attrs, hu_event_timestamp) as hu_attrs,
            argMax(hu_created_at, hu_event_timestamp) as hu_created_at,
            argMax(hu_updated_at, hu_event_timestamp) as hu_updated_at,
            argMax(hu_lock_task_id, hu_event_timestamp) as hu_lock_task_id,
            argMax(hu_effective_storage_id, hu_event_timestamp) as hu_effective_storage_id,
            argMax(hu_kind_code, hu_event_timestamp) as hu_kind_code,
            argMax(hu_kind_name, hu_event_timestamp) as hu_kind_name,
            argMax(hu_kind_attrs, hu_event_timestamp) as hu_kind_attrs,
            argMax(hu_kind_active, hu_event_timestamp) as hu_kind_active,
            argMax(hu_kind_max_volume, hu_event_timestamp) as hu_kind_max_volume,
            argMax(hu_kind_max_weight, hu_event_timestamp) as hu_kind_max_weight,
            argMax(hu_kind_usage_type, hu_event_timestamp) as hu_kind_usage_type,
            argMax(hu_kind_abbr, hu_event_timestamp) as hu_kind_abbr,
            argMax(hu_kind_length, hu_event_timestamp) as hu_kind_length,
            argMax(hu_kind_breadth, hu_event_timestamp) as hu_kind_breadth,
            argMax(hu_kind_height, hu_event_timestamp) as hu_kind_height,
            argMax(hu_kind_weight, hu_event_timestamp) as hu_kind_weight,
            argMax(storage_bin_code, hu_event_timestamp) as storage_bin_code,
            argMax(storage_bin_description, hu_event_timestamp) as storage_bin_description,
            argMax(storage_bin_status, hu_event_timestamp) as storage_bin_status,
            argMax(storage_bin_hu_id, hu_event_timestamp) as storage_bin_hu_id,
            argMax(storage_multi_sku, hu_event_timestamp) as storage_multi_sku,
            argMax(storage_multi_batch, hu_event_timestamp) as storage_multi_batch,
            argMax(storage_picking_position, hu_event_timestamp) as storage_picking_position,
            argMax(storage_putaway_position, hu_event_timestamp) as storage_putaway_position,
            argMax(storage_rank, hu_event_timestamp) as storage_rank,
            argMax(storage_aisle, hu_event_timestamp) as storage_aisle,
            argMax(storage_bay, hu_event_timestamp) as storage_bay,
            argMax(storage_level, hu_event_timestamp) as storage_level,
            argMax(storage_position, hu_event_timestamp) as storage_position,
            argMax(storage_depth, hu_event_timestamp) as storage_depth,
            argMax(storage_max_sku_count, hu_event_timestamp) as storage_max_sku_count,
            argMax(storage_max_sku_batch_count, hu_event_timestamp) as storage_max_sku_batch_count,
            argMax(storage_bin_type_id, hu_event_timestamp) as storage_bin_type_id,
            argMax(storage_bin_type_code, hu_event_timestamp) as storage_bin_type_code,
            argMax(storage_bin_type_description, hu_event_timestamp) as storage_bin_type_description,
            argMax(storage_max_volume_in_cc, hu_event_timestamp) as storage_max_volume_in_cc,
            argMax(storage_max_weight_in_kg, hu_event_timestamp) as storage_max_weight_in_kg,
            argMax(storage_pallet_capacity, hu_event_timestamp) as storage_pallet_capacity,
            argMax(storage_hu_type, hu_event_timestamp) as storage_hu_type,
            argMax(storage_auxiliary_bin, hu_event_timestamp) as storage_auxiliary_bin,
            argMax(storage_hu_multi_sku, hu_event_timestamp) as storage_hu_multi_sku,
            argMax(storage_hu_multi_batch, hu_event_timestamp) as storage_hu_multi_batch,
            argMax(storage_use_derived_pallet_best_fit, hu_event_timestamp) as storage_use_derived_pallet_best_fit,
            argMax(storage_only_full_pallet, hu_event_timestamp) as storage_only_full_pallet,
            argMax(storage_bin_type_active, hu_event_timestamp) as storage_bin_type_active,
            argMax(storage_zone_id, hu_event_timestamp) as storage_zone_id,
            argMax(storage_zone_code, hu_event_timestamp) as storage_zone_code,
            argMax(storage_zone_description, hu_event_timestamp) as storage_zone_description,
            argMax(storage_zone_face, hu_event_timestamp) as storage_zone_face,
            argMax(storage_peripheral, hu_event_timestamp) as storage_peripheral,
            argMax(storage_surveillance_config, hu_event_timestamp) as storage_surveillance_config,
            argMax(storage_zone_active, hu_event_timestamp) as storage_zone_active,
            argMax(storage_area_id, hu_event_timestamp) as storage_area_id,
            argMax(storage_area_code, hu_event_timestamp) as storage_area_code,
            argMax(storage_area_description, hu_event_timestamp) as storage_area_description,
            argMax(storage_area_type, hu_event_timestamp) as storage_area_type,
            argMax(storage_rolling_days, hu_event_timestamp) as storage_rolling_days,
            argMax(storage_area_active, hu_event_timestamp) as storage_area_active,
            argMax(storage_x1, hu_event_timestamp) as storage_x1,
            argMax(storage_x2, hu_event_timestamp) as storage_x2,
            argMax(storage_y1, hu_event_timestamp) as storage_y1,
            argMax(storage_y2, hu_event_timestamp) as storage_y2,
            argMax(storage_position_active, hu_event_timestamp) as storage_position_active,
            argMax(storage_attrs, hu_event_timestamp) as storage_attrs,
            argMax(storage_bin_mapping, hu_event_timestamp) as storage_bin_mapping,
            argMax(storage_created_at, hu_event_timestamp) as storage_created_at,
            argMax(storage_updated_at, hu_event_timestamp) as storage_updated_at,
            argMax(sku_name, hu_event_timestamp) as sku_name,
            argMax(sku_short_description, hu_event_timestamp) as sku_short_description,
            argMax(sku_description, hu_event_timestamp) as sku_description,
            argMax(sku_category, hu_event_timestamp) as sku_category,
            argMax(sku_product, hu_event_timestamp) as sku_product,
            argMax(sku_product_id, hu_event_timestamp) as sku_product_id,
            argMax(sku_category_group, hu_event_timestamp) as sku_category_group,
            argMax(sku_sub_brand, hu_event_timestamp) as sku_sub_brand,
            argMax(sku_brand, hu_event_timestamp) as sku_brand,
            argMax(sku_fulfillment_type, hu_event_timestamp) as sku_fulfillment_type,
            argMax(sku_inventory_type, hu_event_timestamp) as sku_inventory_type,
            argMax(sku_shelf_life, hu_event_timestamp) as sku_shelf_life,
            argMax(sku_handling_unit_type, hu_event_timestamp) as sku_handling_unit_type,
            argMax(sku_cases_per_layer, hu_event_timestamp) as sku_cases_per_layer,
            argMax(sku_layers, hu_event_timestamp) as sku_layers,
            argMax(sku_active_from, hu_event_timestamp) as sku_active_from,
            argMax(sku_active_till, hu_event_timestamp) as sku_active_till,
            argMax(sku_l0_units, hu_event_timestamp) as sku_l0_units,
            argMax(sku_l0_name, hu_event_timestamp) as sku_l0_name,
            argMax(sku_l0_weight, hu_event_timestamp) as sku_l0_weight,
            argMax(sku_l0_volume, hu_event_timestamp) as sku_l0_volume,
            argMax(sku_l0_length, hu_event_timestamp) as sku_l0_length,
            argMax(sku_l0_width, hu_event_timestamp) as sku_l0_width,
            argMax(sku_l0_height, hu_event_timestamp) as sku_l0_height,
            argMax(sku_l1_units, hu_event_timestamp) as sku_l1_units,
            argMax(sku_l1_name, hu_event_timestamp) as sku_l1_name,
            argMax(sku_l1_weight, hu_event_timestamp) as sku_l1_weight,
            argMax(sku_l1_volume, hu_event_timestamp) as sku_l1_volume,
            argMax(sku_l1_length, hu_event_timestamp) as sku_l1_length,
            argMax(sku_l1_width, hu_event_timestamp) as sku_l1_width,
            argMax(sku_l1_height, hu_event_timestamp) as sku_l1_height,
            argMax(sku_active, hu_event_timestamp) as sku_active,
            argMax(sku_created_at, hu_event_timestamp) as sku_created_at,
            argMax(sku_updated_at, hu_event_timestamp) as sku_updated_at,
            argMax(effective_storage_bin_code, hu_event_timestamp) as effective_storage_bin_code,
            argMax(effective_storage_bin_description, hu_event_timestamp) as effective_storage_bin_description,
            argMax(effective_storage_bin_status, hu_event_timestamp) as effective_storage_bin_status,
            argMax(effective_storage_bin_hu_id, hu_event_timestamp) as effective_storage_bin_hu_id,
            argMax(effective_storage_multi_sku, hu_event_timestamp) as effective_storage_multi_sku,
            argMax(effective_storage_multi_batch, hu_event_timestamp) as effective_storage_multi_batch,
            argMax(effective_storage_picking_position, hu_event_timestamp) as effective_storage_picking_position,
            argMax(effective_storage_putaway_position, hu_event_timestamp) as effective_storage_putaway_position,
            argMax(effective_storage_rank, hu_event_timestamp) as effective_storage_rank,
            argMax(effective_storage_aisle, hu_event_timestamp) as effective_storage_aisle,
            argMax(effective_storage_bay, hu_event_timestamp) as effective_storage_bay,
            argMax(effective_storage_level, hu_event_timestamp) as effective_storage_level,
            argMax(effective_storage_position, hu_event_timestamp) as effective_storage_position,
            argMax(effective_storage_depth, hu_event_timestamp) as effective_storage_depth,
            argMax(effective_storage_max_sku_count, hu_event_timestamp) as effective_storage_max_sku_count,
            argMax(effective_storage_max_sku_batch_count, hu_event_timestamp) as effective_storage_max_sku_batch_count,
            argMax(effective_storage_bin_type_id, hu_event_timestamp) as effective_storage_bin_type_id,
            argMax(effective_storage_bin_type_code, hu_event_timestamp) as effective_storage_bin_type_code,
            argMax(effective_storage_bin_type_description, hu_event_timestamp) as effective_storage_bin_type_description,
            argMax(effective_storage_max_volume_in_cc, hu_event_timestamp) as effective_storage_max_volume_in_cc,
            argMax(effective_storage_max_weight_in_kg, hu_event_timestamp) as effective_storage_max_weight_in_kg,
            argMax(effective_storage_pallet_capacity, hu_event_timestamp) as effective_storage_pallet_capacity,
            argMax(effective_storage_hu_type, hu_event_timestamp) as effective_storage_hu_type,
            argMax(effective_storage_auxiliary_bin, hu_event_timestamp) as effective_storage_auxiliary_bin,
            argMax(effective_storage_hu_multi_sku, hu_event_timestamp) as effective_storage_hu_multi_sku,
            argMax(effective_storage_hu_multi_batch, hu_event_timestamp) as effective_storage_hu_multi_batch,
            argMax(effective_storage_use_derived_pallet_best_fit, hu_event_timestamp) as effective_storage_use_derived_pallet_best_fit,
            argMax(effective_storage_only_full_pallet, hu_event_timestamp) as effective_storage_only_full_pallet,
            argMax(effective_storage_bin_type_active, hu_event_timestamp) as effective_storage_bin_type_active,
            argMax(effective_storage_zone_id, hu_event_timestamp) as effective_storage_zone_id,
            argMax(effective_storage_zone_code, hu_event_timestamp) as effective_storage_zone_code,
            argMax(effective_storage_zone_description, hu_event_timestamp) as effective_storage_zone_description,
            argMax(effective_storage_zone_face, hu_event_timestamp) as effective_storage_zone_face,
            argMax(effective_storage_peripheral, hu_event_timestamp) as effective_storage_peripheral,
            argMax(effective_storage_surveillance_config, hu_event_timestamp) as effective_storage_surveillance_config,
            argMax(effective_storage_zone_active, hu_event_timestamp) as effective_storage_zone_active,
            argMax(effective_storage_area_id, hu_event_timestamp) as effective_storage_area_id,
            argMax(effective_storage_area_code, hu_event_timestamp) as effective_storage_area_code,
            argMax(effective_storage_area_description, hu_event_timestamp) as effective_storage_area_description,
            argMax(effective_storage_area_type, hu_event_timestamp) as effective_storage_area_type,
            argMax(effective_storage_rolling_days, hu_event_timestamp) as effective_storage_rolling_days,
            argMax(effective_storage_area_active, hu_event_timestamp) as effective_storage_area_active,
            argMax(effective_storage_x1, hu_event_timestamp) as effective_storage_x1,
            argMax(effective_storage_x2, hu_event_timestamp) as effective_storage_x2,
            argMax(effective_storage_y1, hu_event_timestamp) as effective_storage_y1,
            argMax(effective_storage_y2, hu_event_timestamp) as effective_storage_y2,
            argMax(effective_storage_position_active, hu_event_timestamp) as effective_storage_position_active,
            argMax(effective_storage_attrs, hu_event_timestamp) as effective_storage_attrs,
            argMax(effective_storage_bin_mapping, hu_event_timestamp) as effective_storage_bin_mapping,
            argMax(effective_storage_created_at, hu_event_timestamp) as effective_storage_created_at,
            argMax(effective_storage_updated_at, hu_event_timestamp) as effective_storage_updated_at,
            argMax(outer_hu_code, hu_event_timestamp) as outer_hu_code,
            argMax(outer_hu_kind_id, hu_event_timestamp) as outer_hu_kind_id,
            argMax(outer_hu_session_id, hu_event_timestamp) as outer_hu_session_id,
            argMax(outer_hu_task_id, hu_event_timestamp) as outer_hu_task_id,
            argMax(outer_hu_storage_id, hu_event_timestamp) as outer_hu_storage_id,
            argMax(outer_hu_outer_hu_id, hu_event_timestamp) as outer_hu_outer_hu_id,
            argMax(outer_hu_state, hu_event_timestamp) as outer_hu_state,
            argMax(outer_hu_attrs, hu_event_timestamp) as outer_hu_attrs,
            argMax(outer_hu_created_at, hu_event_timestamp) as outer_hu_created_at,
            argMax(outer_hu_updated_at, hu_event_timestamp) as outer_hu_updated_at,
            argMax(outer_hu_lock_task_id, hu_event_timestamp) as outer_hu_lock_task_id,
            argMax(outer_hu_effective_storage_id, hu_event_timestamp) as outer_hu_effective_storage_id,
            argMax(outer_hu_kind_code, hu_event_timestamp) as outer_hu_kind_code,
            argMax(outer_hu_kind_name, hu_event_timestamp) as outer_hu_kind_name,
            argMax(outer_hu_kind_attrs, hu_event_timestamp) as outer_hu_kind_attrs,
            argMax(outer_hu_kind_active, hu_event_timestamp) as outer_hu_kind_active,
            argMax(outer_hu_kind_max_volume, hu_event_timestamp) as outer_hu_kind_max_volume,
            argMax(outer_hu_kind_max_weight, hu_event_timestamp) as outer_hu_kind_max_weight,
            argMax(outer_hu_kind_usage_type, hu_event_timestamp) as outer_hu_kind_usage_type,
            argMax(outer_hu_kind_abbr, hu_event_timestamp) as outer_hu_kind_abbr,
            argMax(outer_hu_kind_length, hu_event_timestamp) as outer_hu_kind_length,
            argMax(outer_hu_kind_breadth, hu_event_timestamp) as outer_hu_kind_breadth,
            argMax(outer_hu_kind_height, hu_event_timestamp) as outer_hu_kind_height,
            argMax(outer_hu_kind_weight, hu_event_timestamp) as outer_hu_kind_weight
        FROM (
            -- Deduplicate incremental events
            SELECT *
            FROM (
                SELECT *,
                    ROW_NUMBER() OVER (
                        PARTITION BY hu_event_id, quant_event_id 
                        ORDER BY _ingested_at DESC
                    ) as rn
                FROM wms_inventory_events_enriched
                WHERE hu_event_timestamp > toStartOfHour(target_time)
                  AND hu_event_timestamp <= target_time
            ) WHERE rn = 1
        )
        GROUP BY wh_id, hu_code, sku_code, uom, bucket, batch, price, inclusion_status, locked_by_task_id, lock_mode
    )
    -- Combine base snapshot with incremental events
    SELECT 
        COALESCE(b.wh_id, i.wh_id) as wh_id,
        COALESCE(b.hu_code, i.hu_code) as hu_code,
        COALESCE(b.sku_code, i.sku_code) as sku_code,
        COALESCE(b.uom, i.uom) as uom,
        COALESCE(b.bucket, i.bucket) as bucket,
        COALESCE(b.batch, i.batch) as batch,
        COALESCE(b.price, i.price) as price,
        COALESCE(b.inclusion_status, i.inclusion_status) as inclusion_status,
        COALESCE(b.locked_by_task_id, i.locked_by_task_id) as locked_by_task_id,
        COALESCE(b.lock_mode, i.lock_mode) as lock_mode,
        COALESCE(b.cumulative_qty, 0) + COALESCE(i.additional_qty, 0) as cumulative_qty,
        target_time as position_timestamp,
        b.event_count + COALESCE(i.additional_event_count, 0) as total_event_count,
        -- Use latest values from incremental if available, otherwise from base
        COALESCE(i.latest_hu_event_id, b.latest_hu_event_id) as latest_hu_event_id,
        COALESCE(i.latest_quant_event_id, b.latest_quant_event_id) as latest_quant_event_id,
        COALESCE(i.last_event_time, b.last_event_time) as last_event_time,
        -- All other fields - take latest from incremental or base
        COALESCE(i.hu_event_seq, b.hu_event_seq) as hu_event_seq,
        COALESCE(i.hu_id, b.hu_id) as hu_id,
        COALESCE(i.hu_event_type, b.hu_event_type) as hu_event_type,
        COALESCE(i.hu_event_payload, b.hu_event_payload) as hu_event_payload,
        COALESCE(i.hu_event_attrs, b.hu_event_attrs) as hu_event_attrs,
        COALESCE(i.session_id, b.session_id) as session_id,
        COALESCE(i.task_id, b.task_id) as task_id,
        COALESCE(i.correlation_id, b.correlation_id) as correlation_id,
        COALESCE(i.storage_id, b.storage_id) as storage_id,
        COALESCE(i.outer_hu_id, b.outer_hu_id) as outer_hu_id,
        COALESCE(i.effective_storage_id, b.effective_storage_id) as effective_storage_id,
        COALESCE(i.sku_id, b.sku_id) as sku_id,
        COALESCE(i.hu_kind_id, b.hu_kind_id) as hu_kind_id,
        COALESCE(i.hu_state, b.hu_state) as hu_state,
        COALESCE(i.hu_attrs, b.hu_attrs) as hu_attrs,
        COALESCE(i.hu_created_at, b.hu_created_at) as hu_created_at,
        COALESCE(i.hu_updated_at, b.hu_updated_at) as hu_updated_at,
        COALESCE(i.hu_lock_task_id, b.hu_lock_task_id) as hu_lock_task_id,
        COALESCE(i.hu_effective_storage_id, b.hu_effective_storage_id) as hu_effective_storage_id,
        COALESCE(i.hu_kind_code, b.hu_kind_code) as hu_kind_code,
        COALESCE(i.hu_kind_name, b.hu_kind_name) as hu_kind_name,
        COALESCE(i.hu_kind_attrs, b.hu_kind_attrs) as hu_kind_attrs,
        COALESCE(i.hu_kind_active, b.hu_kind_active) as hu_kind_active,
        COALESCE(i.hu_kind_max_volume, b.hu_kind_max_volume) as hu_kind_max_volume,
        COALESCE(i.hu_kind_max_weight, b.hu_kind_max_weight) as hu_kind_max_weight,
        COALESCE(i.hu_kind_usage_type, b.hu_kind_usage_type) as hu_kind_usage_type,
        COALESCE(i.hu_kind_abbr, b.hu_kind_abbr) as hu_kind_abbr,
        COALESCE(i.hu_kind_length, b.hu_kind_length) as hu_kind_length,
        COALESCE(i.hu_kind_breadth, b.hu_kind_breadth) as hu_kind_breadth,
        COALESCE(i.hu_kind_height, b.hu_kind_height) as hu_kind_height,
        COALESCE(i.hu_kind_weight, b.hu_kind_weight) as hu_kind_weight,
        COALESCE(i.storage_bin_code, b.storage_bin_code) as storage_bin_code,
        COALESCE(i.storage_bin_description, b.storage_bin_description) as storage_bin_description,
        COALESCE(i.storage_bin_status, b.storage_bin_status) as storage_bin_status,
        COALESCE(i.storage_bin_hu_id, b.storage_bin_hu_id) as storage_bin_hu_id,
        COALESCE(i.storage_multi_sku, b.storage_multi_sku) as storage_multi_sku,
        COALESCE(i.storage_multi_batch, b.storage_multi_batch) as storage_multi_batch,
        COALESCE(i.storage_picking_position, b.storage_picking_position) as storage_picking_position,
        COALESCE(i.storage_putaway_position, b.storage_putaway_position) as storage_putaway_position,
        COALESCE(i.storage_rank, b.storage_rank) as storage_rank,
        COALESCE(i.storage_aisle, b.storage_aisle) as storage_aisle,
        COALESCE(i.storage_bay, b.storage_bay) as storage_bay,
        COALESCE(i.storage_level, b.storage_level) as storage_level,
        COALESCE(i.storage_position, b.storage_position) as storage_position,
        COALESCE(i.storage_depth, b.storage_depth) as storage_depth,
        COALESCE(i.storage_max_sku_count, b.storage_max_sku_count) as storage_max_sku_count,
        COALESCE(i.storage_max_sku_batch_count, b.storage_max_sku_batch_count) as storage_max_sku_batch_count,
        COALESCE(i.storage_bin_type_id, b.storage_bin_type_id) as storage_bin_type_id,
        COALESCE(i.storage_bin_type_code, b.storage_bin_type_code) as storage_bin_type_code,
        COALESCE(i.storage_bin_type_description, b.storage_bin_type_description) as storage_bin_type_description,
        COALESCE(i.storage_max_volume_in_cc, b.storage_max_volume_in_cc) as storage_max_volume_in_cc,
        COALESCE(i.storage_max_weight_in_kg, b.storage_max_weight_in_kg) as storage_max_weight_in_kg,
        COALESCE(i.storage_pallet_capacity, b.storage_pallet_capacity) as storage_pallet_capacity,
        COALESCE(i.storage_hu_type, b.storage_hu_type) as storage_hu_type,
        COALESCE(i.storage_auxiliary_bin, b.storage_auxiliary_bin) as storage_auxiliary_bin,
        COALESCE(i.storage_hu_multi_sku, b.storage_hu_multi_sku) as storage_hu_multi_sku,
        COALESCE(i.storage_hu_multi_batch, b.storage_hu_multi_batch) as storage_hu_multi_batch,
        COALESCE(i.storage_use_derived_pallet_best_fit, b.storage_use_derived_pallet_best_fit) as storage_use_derived_pallet_best_fit,
        COALESCE(i.storage_only_full_pallet, b.storage_only_full_pallet) as storage_only_full_pallet,
        COALESCE(i.storage_bin_type_active, b.storage_bin_type_active) as storage_bin_type_active,
        COALESCE(i.storage_zone_id, b.storage_zone_id) as storage_zone_id,
        COALESCE(i.storage_zone_code, b.storage_zone_code) as storage_zone_code,
        COALESCE(i.storage_zone_description, b.storage_zone_description) as storage_zone_description,
        COALESCE(i.storage_zone_face, b.storage_zone_face) as storage_zone_face,
        COALESCE(i.storage_peripheral, b.storage_peripheral) as storage_peripheral,
        COALESCE(i.storage_surveillance_config, b.storage_surveillance_config) as storage_surveillance_config,
        COALESCE(i.storage_zone_active, b.storage_zone_active) as storage_zone_active,
        COALESCE(i.storage_area_id, b.storage_area_id) as storage_area_id,
        COALESCE(i.storage_area_code, b.storage_area_code) as storage_area_code,
        COALESCE(i.storage_area_description, b.storage_area_description) as storage_area_description,
        COALESCE(i.storage_area_type, b.storage_area_type) as storage_area_type,
        COALESCE(i.storage_rolling_days, b.storage_rolling_days) as storage_rolling_days,
        COALESCE(i.storage_area_active, b.storage_area_active) as storage_area_active,
        COALESCE(i.storage_x1, b.storage_x1) as storage_x1,
        COALESCE(i.storage_x2, b.storage_x2) as storage_x2,
        COALESCE(i.storage_y1, b.storage_y1) as storage_y1,
        COALESCE(i.storage_y2, b.storage_y2) as storage_y2,
        COALESCE(i.storage_position_active, b.storage_position_active) as storage_position_active,
        COALESCE(i.storage_attrs, b.storage_attrs) as storage_attrs,
        COALESCE(i.storage_bin_mapping, b.storage_bin_mapping) as storage_bin_mapping,
        COALESCE(i.storage_created_at, b.storage_created_at) as storage_created_at,
        COALESCE(i.storage_updated_at, b.storage_updated_at) as storage_updated_at,
        COALESCE(i.sku_name, b.sku_name) as sku_name,
        COALESCE(i.sku_short_description, b.sku_short_description) as sku_short_description,
        COALESCE(i.sku_description, b.sku_description) as sku_description,
        COALESCE(i.sku_category, b.sku_category) as sku_category,
        COALESCE(i.sku_product, b.sku_product) as sku_product,
        COALESCE(i.sku_product_id, b.sku_product_id) as sku_product_id,
        COALESCE(i.sku_category_group, b.sku_category_group) as sku_category_group,
        COALESCE(i.sku_sub_brand, b.sku_sub_brand) as sku_sub_brand,
        COALESCE(i.sku_brand, b.sku_brand) as sku_brand,
        COALESCE(i.sku_fulfillment_type, b.sku_fulfillment_type) as sku_fulfillment_type,
        COALESCE(i.sku_inventory_type, b.sku_inventory_type) as sku_inventory_type,
        COALESCE(i.sku_shelf_life, b.sku_shelf_life) as sku_shelf_life,
        COALESCE(i.sku_handling_unit_type, b.sku_handling_unit_type) as sku_handling_unit_type,
        COALESCE(i.sku_cases_per_layer, b.sku_cases_per_layer) as sku_cases_per_layer,
        COALESCE(i.sku_layers, b.sku_layers) as sku_layers,
        COALESCE(i.sku_active_from, b.sku_active_from) as sku_active_from,
        COALESCE(i.sku_active_till, b.sku_active_till) as sku_active_till,
        COALESCE(i.sku_l0_units, b.sku_l0_units) as sku_l0_units,
        COALESCE(i.sku_l0_name, b.sku_l0_name) as sku_l0_name,
        COALESCE(i.sku_l0_weight, b.sku_l0_weight) as sku_l0_weight,
        COALESCE(i.sku_l0_volume, b.sku_l0_volume) as sku_l0_volume,
        COALESCE(i.sku_l0_length, b.sku_l0_length) as sku_l0_length,
        COALESCE(i.sku_l0_width, b.sku_l0_width) as sku_l0_width,
        COALESCE(i.sku_l0_height, b.sku_l0_height) as sku_l0_height,
        COALESCE(i.sku_l1_units, b.sku_l1_units) as sku_l1_units,
        COALESCE(i.sku_l1_name, b.sku_l1_name) as sku_l1_name,
        COALESCE(i.sku_l1_weight, b.sku_l1_weight) as sku_l1_weight,
        COALESCE(i.sku_l1_volume, b.sku_l1_volume) as sku_l1_volume,
        COALESCE(i.sku_l1_length, b.sku_l1_length) as sku_l1_length,
        COALESCE(i.sku_l1_width, b.sku_l1_width) as sku_l1_width,
        COALESCE(i.sku_l1_height, b.sku_l1_height) as sku_l1_height,
        COALESCE(i.sku_active, b.sku_active) as sku_active,
        COALESCE(i.sku_created_at, b.sku_created_at) as sku_created_at,
        COALESCE(i.sku_updated_at, b.sku_updated_at) as sku_updated_at,
        COALESCE(i.effective_storage_bin_code, b.effective_storage_bin_code) as effective_storage_bin_code,
        COALESCE(i.effective_storage_bin_description, b.effective_storage_bin_description) as effective_storage_bin_description,
        COALESCE(i.effective_storage_bin_status, b.effective_storage_bin_status) as effective_storage_bin_status,
        COALESCE(i.effective_storage_bin_hu_id, b.effective_storage_bin_hu_id) as effective_storage_bin_hu_id,
        COALESCE(i.effective_storage_multi_sku, b.effective_storage_multi_sku) as effective_storage_multi_sku,
        COALESCE(i.effective_storage_multi_batch, b.effective_storage_multi_batch) as effective_storage_multi_batch,
        COALESCE(i.effective_storage_picking_position, b.effective_storage_picking_position) as effective_storage_picking_position,
        COALESCE(i.effective_storage_putaway_position, b.effective_storage_putaway_position) as effective_storage_putaway_position,
        COALESCE(i.effective_storage_rank, b.effective_storage_rank) as effective_storage_rank,
        COALESCE(i.effective_storage_aisle, b.effective_storage_aisle) as effective_storage_aisle,
        COALESCE(i.effective_storage_bay, b.effective_storage_bay) as effective_storage_bay,
        COALESCE(i.effective_storage_level, b.effective_storage_level) as effective_storage_level,
        COALESCE(i.effective_storage_position, b.effective_storage_position) as effective_storage_position,
        COALESCE(i.effective_storage_depth, b.effective_storage_depth) as effective_storage_depth,
        COALESCE(i.effective_storage_max_sku_count, b.effective_storage_max_sku_count) as effective_storage_max_sku_count,
        COALESCE(i.effective_storage_max_sku_batch_count, b.effective_storage_max_sku_batch_count) as effective_storage_max_sku_batch_count,
        COALESCE(i.effective_storage_bin_type_id, b.effective_storage_bin_type_id) as effective_storage_bin_type_id,
        COALESCE(i.effective_storage_bin_type_code, b.effective_storage_bin_type_code) as effective_storage_bin_type_code,
        COALESCE(i.effective_storage_bin_type_description, b.effective_storage_bin_type_description) as effective_storage_bin_type_description,
        COALESCE(i.effective_storage_max_volume_in_cc, b.effective_storage_max_volume_in_cc) as effective_storage_max_volume_in_cc,
        COALESCE(i.effective_storage_max_weight_in_kg, b.effective_storage_max_weight_in_kg) as effective_storage_max_weight_in_kg,
        COALESCE(i.effective_storage_pallet_capacity, b.effective_storage_pallet_capacity) as effective_storage_pallet_capacity,
        COALESCE(i.effective_storage_hu_type, b.effective_storage_hu_type) as effective_storage_hu_type,
        COALESCE(i.effective_storage_auxiliary_bin, b.effective_storage_auxiliary_bin) as effective_storage_auxiliary_bin,
        COALESCE(i.effective_storage_hu_multi_sku, b.effective_storage_hu_multi_sku) as effective_storage_hu_multi_sku,
        COALESCE(i.effective_storage_hu_multi_batch, b.effective_storage_hu_multi_batch) as effective_storage_hu_multi_batch,
        COALESCE(i.effective_storage_use_derived_pallet_best_fit, b.effective_storage_use_derived_pallet_best_fit) as effective_storage_use_derived_pallet_best_fit,
        COALESCE(i.effective_storage_only_full_pallet, b.effective_storage_only_full_pallet) as effective_storage_only_full_pallet,
        COALESCE(i.effective_storage_bin_type_active, b.effective_storage_bin_type_active) as effective_storage_bin_type_active,
        COALESCE(i.effective_storage_zone_id, b.effective_storage_zone_id) as effective_storage_zone_id,
        COALESCE(i.effective_storage_zone_code, b.effective_storage_zone_code) as effective_storage_zone_code,
        COALESCE(i.effective_storage_zone_description, b.effective_storage_zone_description) as effective_storage_zone_description,
        COALESCE(i.effective_storage_zone_face, b.effective_storage_zone_face) as effective_storage_zone_face,
        COALESCE(i.effective_storage_peripheral, b.effective_storage_peripheral) as effective_storage_peripheral,
        COALESCE(i.effective_storage_surveillance_config, b.effective_storage_surveillance_config) as effective_storage_surveillance_config,
        COALESCE(i.effective_storage_zone_active, b.effective_storage_zone_active) as effective_storage_zone_active,
        COALESCE(i.effective_storage_area_id, b.effective_storage_area_id) as effective_storage_area_id,
        COALESCE(i.effective_storage_area_code, b.effective_storage_area_code) as effective_storage_area_code,
        COALESCE(i.effective_storage_area_description, b.effective_storage_area_description) as effective_storage_area_description,
        COALESCE(i.effective_storage_area_type, b.effective_storage_area_type) as effective_storage_area_type,
        COALESCE(i.effective_storage_rolling_days, b.effective_storage_rolling_days) as effective_storage_rolling_days,
        COALESCE(i.effective_storage_area_active, b.effective_storage_area_active) as effective_storage_area_active,
        COALESCE(i.effective_storage_x1, b.effective_storage_x1) as effective_storage_x1,
        COALESCE(i.effective_storage_x2, b.effective_storage_x2) as effective_storage_x2,
        COALESCE(i.effective_storage_y1, b.effective_storage_y1) as effective_storage_y1,
        COALESCE(i.effective_storage_y2, b.effective_storage_y2) as effective_storage_y2,
        COALESCE(i.effective_storage_position_active, b.effective_storage_position_active) as effective_storage_position_active,
        COALESCE(i.effective_storage_attrs, b.effective_storage_attrs) as effective_storage_attrs,
        COALESCE(i.effective_storage_bin_mapping, b.effective_storage_bin_mapping) as effective_storage_bin_mapping,
        COALESCE(i.effective_storage_created_at, b.effective_storage_created_at) as effective_storage_created_at,
        COALESCE(i.effective_storage_updated_at, b.effective_storage_updated_at) as effective_storage_updated_at,
        COALESCE(i.outer_hu_code, b.outer_hu_code) as outer_hu_code,
        COALESCE(i.outer_hu_kind_id, b.outer_hu_kind_id) as outer_hu_kind_id,
        COALESCE(i.outer_hu_session_id, b.outer_hu_session_id) as outer_hu_session_id,
        COALESCE(i.outer_hu_task_id, b.outer_hu_task_id) as outer_hu_task_id,
        COALESCE(i.outer_hu_storage_id, b.outer_hu_storage_id) as outer_hu_storage_id,
        COALESCE(i.outer_hu_outer_hu_id, b.outer_hu_outer_hu_id) as outer_hu_outer_hu_id,
        COALESCE(i.outer_hu_state, b.outer_hu_state) as outer_hu_state,
        COALESCE(i.outer_hu_attrs, b.outer_hu_attrs) as outer_hu_attrs,
        COALESCE(i.outer_hu_created_at, b.outer_hu_created_at) as outer_hu_created_at,
        COALESCE(i.outer_hu_updated_at, b.outer_hu_updated_at) as outer_hu_updated_at,
        COALESCE(i.outer_hu_lock_task_id, b.outer_hu_lock_task_id) as outer_hu_lock_task_id,
        COALESCE(i.outer_hu_effective_storage_id, b.outer_hu_effective_storage_id) as outer_hu_effective_storage_id,
        COALESCE(i.outer_hu_kind_code, b.outer_hu_kind_code) as outer_hu_kind_code,
        COALESCE(i.outer_hu_kind_name, b.outer_hu_kind_name) as outer_hu_kind_name,
        COALESCE(i.outer_hu_kind_attrs, b.outer_hu_kind_attrs) as outer_hu_kind_attrs,
        COALESCE(i.outer_hu_kind_active, b.outer_hu_kind_active) as outer_hu_kind_active,
        COALESCE(i.outer_hu_kind_max_volume, b.outer_hu_kind_max_volume) as outer_hu_kind_max_volume,
        COALESCE(i.outer_hu_kind_max_weight, b.outer_hu_kind_max_weight) as outer_hu_kind_max_weight,
        COALESCE(i.outer_hu_kind_usage_type, b.outer_hu_kind_usage_type) as outer_hu_kind_usage_type,
        COALESCE(i.outer_hu_kind_abbr, b.outer_hu_kind_abbr) as outer_hu_kind_abbr,
        COALESCE(i.outer_hu_kind_length, b.outer_hu_kind_length) as outer_hu_kind_length,
        COALESCE(i.outer_hu_kind_breadth, b.outer_hu_kind_breadth) as outer_hu_kind_breadth,
        COALESCE(i.outer_hu_kind_height, b.outer_hu_kind_height) as outer_hu_kind_height,
        COALESCE(i.outer_hu_kind_weight, b.outer_hu_kind_weight) as outer_hu_kind_weight
    FROM base_snapshot b
    FULL OUTER JOIN incremental_events i USING (wh_id, hu_code, sku_code, uom, bucket, batch, price, inclusion_status, locked_by_task_id, lock_mode)
);

-- Sample queries:

-- 1. Get current inventory position
-- SELECT * FROM wms_inventory_position_at(now())
-- WHERE sku_code = 'SKU123' AND cumulative_qty > 0;

-- 2. Get position at specific time
-- SELECT * FROM wms_inventory_position_at(toDateTime64('2024-01-15 14:30:00', 3))
-- WHERE wh_id = 1 AND storage_zone_code = 'ZONE-A';

-- 3. Get all positions with quantity for a warehouse at current time
-- SELECT 
--     hu_code, sku_code, batch, cumulative_qty, storage_bin_code
-- FROM wms_inventory_position_at(now())
-- WHERE wh_id = 1 AND cumulative_qty != 0
-- ORDER BY sku_code, batch;