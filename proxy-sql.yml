apiVersion: v1
kind: ConfigMap
metadata:
  name: proxysql-config
  namespace: kafka
data:
  proxysql.cnf: |
    # This ProxySQL configuration is tailored for routing traffic to a ClickHouse
    # backend that is exposing its MySQL-compatible network protocol.

    # Basic ProxySQL Configuration for ClickHouse Rewrite
    admin_variables=
    {
        admin_credentials="admin:password" # Admin credentials
        mysql_ifaces="0.0.0.0:6032"        # ProxySQL admin interface
    }

    mysql_variables=
    {
        threads=2
        max_connections=500
        default_charset="utf8"              # Changed from utf8mb4 to match default collation
        interfaces="0.0.0.0:6033"           # Port for client connections
        stacksize="2048000"                 # Stack size setting
        
        # Only include basic settings that are supported
        connect_timeout_server=3000
        connection_delay_multiplex_ms=0
        monitor_enabled=0                   # Disable monitoring
        monitor_password=""                 # Empty password
        eventslog_filename=""               # Keep logs to stdout
        eventslog_format=1                  # CSV format
        eventslog_default_log=1             # Log all queries
        
        # Connection handling
        have_ssl=false
        have_compress=false
        multiplexing=false
        sessions_sort=false
        commands_stats=false
    }

    # Define the backend ClickHouse server
    mysql_servers:
    (
      {
        address="clickhouse"      # ClickHouse IP/hostname
        port=9004                  # ClickHouse MySQL protocol port
        hostgroup_id=0
        max_connections=200
        weight=1000
        compression=0
      }
    )

    # Define user credentials
    mysql_users:
    (
      {
        username="default"
        password="PKvnzDLrQF2cAnjVsuQy"
        database="sbx_uat_insights"
        active=1
        default_hostgroup=0
        max_connections=200
      }
    )

    # Single rule for all SET commands
    mysql_query_rules:
    (
      {
        rule_id=1
        active=1
        match_pattern="(?i)^SET\\s+.*" # Match any query starting with SET
        replace_pattern="SELECT 1"      # Replace with SELECT 1
        apply=1
      }
    )
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxysql
  namespace: kafka
  labels:
    app: proxysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxysql
  template:
    metadata:
      labels:
        app: proxysql
    spec:
      containers:
        - name: proxysql
          image: proxysql/proxysql:2.6.2 # Use a recent stable version
          command: ["/usr/bin/proxysql"] # Or actual path to proxysql binary
          args:
            - "-f"
            - "-c"
            - "/etc/proxysql.cnf"
            - "--idle-threads"
          ports:
            - name: mysql
              containerPort: 6033 # For Frappe Insights client connections
            - name: admin
              containerPort: 6032 # For ProxySQL admin interface
          volumeMounts:
            - name: proxysql-config-volume
              mountPath: /etc/proxysql.cnf
              subPath: proxysql.cnf
      volumes:
        - name: proxysql-config-volume
          configMap:
            name: proxysql-config
---
apiVersion: v1
kind: Service
metadata:
  name: proxysql-service
  namespace: kafka
  labels:
    app: proxysql
  annotations:
    networking.gke.io/load-balancer-type: "Internal"
spec:
  type: LoadBalancer
  ports:
    - name: mysql
      port: 6033 # Port the service will listen on
      targetPort: 6033 # Port on the ProxySQL pods
      protocol: TCP
    - name: admin
      port: 6032 # Port for ProxySQL admin interface
      targetPort: 6032 # Port on the ProxySQL pods
      protocol: TCP
  selector:
    app: proxysql
